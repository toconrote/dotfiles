" 個人用：まだまだ洗練されていないので参考にはしないでね
" VimのGUI版で使われるフォントのリストである。
":set guifont=MS_Gothic:h12
":set guifontwide=MS_Gothic:h12
:set guifont=Consolas:h12:cSHIFTJIS
:set guifontwide=Consolas:h12:cSHIFTJIS
:set ambiwidth=double

" 画面上の列幅を設定する。
:set columns=100
" 画面上の行数。
:set lines=32

" コマンドラインに使われる画面上の行数。
:set cmdheight=2

" このオプションは、いつタブページのラベルを表示するかを指定する。
"                0: 表示しない
"                1: 2個以上のタブページがあるときのみ表示
"                2: 常に表示
:set showtabline=2

" 前回の検索パターンが存在するとき、それにマッチするテキストを全て強調表示する。（有効:hlsearch/無効:nohlsearch）
:set hlsearch

if has('multi_byte_ime')
  highlight Cursor guifg=NONE guibg=White
  highlight CursorIM guifg=NONE guibg=Red
endif

" Visual選択で選択されたテキストが、自動的にクリップボードレジスタ "*" にコピーされる。
":set guioptions+=a
" 前回終了時のウィンドウ状態を保存して復元


let g:save_window_file = expand('~/vimfiles/.vimwinpos')
let g:save_window_file2 = expand('~/vimfiles/.vimwinfull')

augroup SaveWindow
  autocmd!
  autocmd VimLeavePre * call s:save_window()
  function! s:save_window()
    let x = getwinposx()
    let y = getwinposy()
    let full = 0
    if x < 0 && y < 0
      let x = 0
      let y = 0
      let full = 1
    endif
    let options = [
          \ 'set columns=' . &columns,
          \ 'set lines=' . &lines,
          \ 'winpos ' . x . ' ' . y,
          \ ]
    let option_f = ['']
    if full == 1
      let option_f = ['au GUIEnter * simalt ~x']
    endif
    if full != 1
      call writefile(options, g:save_window_file)
    endif
    call writefile(option_f, g:save_window_file2)
  endfunction
augroup END

if filereadable(g:save_window_file)
  execute 'source' g:save_window_file
endif
if filereadable(g:save_window_file2)
  execute 'source' g:save_window_file2
endif
