" 個人用：まだまだ洗練されていないので参考にはしないでね
let $HOME=expand('C:\vimhome\')

source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/macros/matchit.vim

runtime! userautoload/*.vim
command! Euser e $home/vimfiles/userautoload/usersetting.vim
command! Eplug e $home/vimfiles/userautoload/plugins.vim

colorscheme hybrid
autocmd ColorScheme * highlight jsFuncArgs guifg=#cc8888
autocmd ColorScheme * highlight javaScriptComment guifg=#688068

set fileencoding=utf-8
set fileencodings=utf-8

set number
set nocompatible
set tabstop=4
set expandtab
set ambiwidth=double
set shiftwidth=2
set smartindent
set hidden
set history=50
set virtualedit=block
set whichwrap=b,s,[,],<,>
set nowrap
set autoindent
set scrolloff=16
set sidescrolloff=16
set list
set listchars=tab:>.,trail:_
set laststatus=2
set statusline=%<%f\ %m\ %r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=\ (%v,%l)/%L%8P\ 
set iminsert=0
set imsearch=-1
set ignorecase
set smartcase
set hlsearch
syntax on
set cursorline
set mouse=a

let g:html_indent_inctags = "tbody"

"""""""""""""""""""""""""""""キーマッピング"""""""""""""""""""""""""""""
""""""●インサートモード"
"■カーソル移動"
noremap! <C-l> nop
noremap! <C-j> <Down>
noremap! <C-k> <Up>
noremap! <C-h> <Left>
noremap! <C-l> <Right>

"■BS
inoremap <C-p> nop
inoremap <C-p> <BS>
inoremap <S-BS> <Home>
inoremap <S-DEL> <END>

"■jjでEsc"
inoremap <silent> jj <Esc>:set iminsert=0<CR>

"■Esc時imeオフ"
inoremap <silent> <ESC> <ESC>:set iminsert=0<CR>

"Ctrl+iで半角全角(AHKでCtrl+iを半角全角に割り当ててある)"
inoremap <C-i> nop
inoremap <C-i> <C-^>

inoremap <Tab> <tab>

"</で自動タグ補完
autocmd FileType html inoremap <silent> <buffer> </ </<C-x><C-o>

""""""●ノーマルモード
"■Ctrl+移動で５ずつ移動(AHKでCtrl+hjklをカーソルに割り当ててある)"
nnoremap <Left> 5h
nnoremap <Down> 5j
nnoremap <Up> 5k
nnoremap <Right> 5l

"Ctrl+WをSpace,Wに
nnoremap <Space>w <C-w>
nnoremap <Space>wv <C-w>v<C-w>l

"Ctrl+Aで全選択
nnoremap <C-a> ggVG

"UTF8で開きなおす"
nnoremap <silent> <F8> :set encoding=UTF-8<CR>

"Space+p,Pでクリップボードペースト"
nnoremap <Space>p "*p
nnoremap <Space>P "*P

"Space+;でヤンクしたテキストをペースト
nnoremap <Space>; "0p
nnoremap <Space><S-;> "0P

"Escで検索ハイライト解除
nnoremap <silent> <Esc> :noh<CR>

" "Ctrl+\でquickrun
" nnoremap <C-\> :QuickRun -runner vimproc<CR>

"Ctul+Fで全体整形
function! s:format_file()
  let view = winsaveview()
  normal gg=G
  silent call winrestview(view)
endfunction
nnoremap <C-F> :call <SID>format_file()<CR>

"Ctrl+Delで次行と連結
nnoremap <silent> <C-Del> j<S-V>:s/\v^\s*\t*//g<CR><S-I><BS><Esc> :noh<CR>

""""""●ビジュアルモード
vnoremap <Space>y "*y

"""""""""""""""""""""""""""""php"""""""""""""""""""""""""""""""""""""""
let php_sql_query = 1
let php_baselib = 1
let php_hemlInStrings = 1
let php_noShortTags = 1
let php_parent_error_close = 1

let g:sql_type_default='mysql'

""""""""""""""""""""""vimscript"""""""""""""""""""""""""""
"カーソル下のhighlight情報を取得する
function! s:get_syn_id(transparent)
  let synid = synID(line("."), col("."), 1)
  if a:transparent
    return synIDtrans(synid)
  else
    return synid
  endif
endfunction
function! s:get_syn_attr(synid)
  let name = synIDattr(a:synid, "name")
  let ctermfg = synIDattr(a:synid, "fg", "cterm")
  let ctermbg = synIDattr(a:synid, "bg", "cterm")
  let guifg = synIDattr(a:synid, "fg", "gui")
  let guibg = synIDattr(a:synid, "bg", "gui")
  return {
        \ "name": name,
        \ "ctermfg": ctermfg,
        \ "ctermbg": ctermbg,
        \ "guifg": guifg,
        \ "guibg": guibg}
endfunction
function! s:get_syn_info()
  let baseSyn = s:get_syn_attr(s:get_syn_id(0))
  echo "name: " . baseSyn.name .
        \ " ctermfg: " . baseSyn.ctermfg .
        \ " ctermbg: " . baseSyn.ctermbg .
        \ " guifg: " . baseSyn.guifg .
        \ " guibg: " . baseSyn.guibg
  let linkedSyn = s:get_syn_attr(s:get_syn_id(1))
  echo "link to"
  echo "name: " . linkedSyn.name .
        \ " ctermfg: " . linkedSyn.ctermfg .
        \ " ctermbg: " . linkedSyn.ctermbg .
        \ " guifg: " . linkedSyn.guifg .
        \ " guibg: " . linkedSyn.guibg
endfunction
command! SyntaxInfo call s:get_syn_info()
